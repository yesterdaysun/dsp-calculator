const PRECACHE = 'precache-v1';
const RUNTIME = 'runtime';

const PRECACHE_URLS = [
    '/',
    'data/data.json',
    'third_party/BigInteger.min.js',
    'third_party/d3.min.js',
    'third_party/d3-sankey.min.js',
    'align.js',
    'assembler.js',
    'belt.js',
    'building.js',
    'calc.css',
    'display.js',
    'dropdown.css',
    'dropdown.js',
    'events.js',
    'factory.js',
    'fragment.js',
    'index.html',
    'init.js',
    'item.js',
    'rational.js',
    'recipe.js',
    'settings.js',
    'target.js',
    'totals.js',
    'visualize.js',
    'images/Accelerant Mk.I(促进剂 Mk.I).png',
    'images/Accelerant Mk.II(促进剂 Mk.II).png',
    'images/Accelerant Mk.III(促进剂Mk.III).png',
    'images/Accumulator(full)(蓄电器(满)).png',
    'images/Accumulator(蓄电器).png',
    'images/Annihilation constraint sphere(湮灭约束球).png',
    'images/Antimatter fuel rod(反物质燃料棒).png',
    'images/Antimatter(反物质).png',
    'images/Artificial star(人造恒星).png',
    'images/Assembling machine Mk.I(制造台 Mk.I).png',
    'images/Assembling machine Mk.II(制造台 Mk.II).png',
    'images/Assembling machine Mk.III(制造台 Mk.III).png',
    'images/Carbon nanotube(碳纳米管).png',
    'images/Casimir crystal(卡西米尔水晶).png',
    'images/Chemical plant(化工厂).png',
    'images/Circuit board(电路板).png',
    'images/Coal ore(煤矿).png',
    'images/Conveyor belt MK.I(传送带).png',
    'images/Conveyor belt MK.II(高速传送带).png',
    'images/Conveyor belt MK.III(极速传送带).png',
    'images/Copper ingot(铜块).png',
    'images/Copper ore(铜矿).png',
    'images/Critical photon(临界光子).png',
    'images/Crude oil(原油).png',
    'images/Crystal silicon(晶格硅).png',
    'images/Deuterium(氘).png',
    'images/Deuteron fuel rod(氘核燃料棒).png',
    'images/Diamond(金刚石).png',
    'images/Dyson sphere component(戴森球组件).png',
    'images/Electric motor(电动机).png',
    'images/Electromagnetic matrix(电磁矩阵).png',
    'images/Electromagnetic turbine(电磁涡轮).png',
    'images/EM-Rail Ejector(电磁轨道弹出器).png',
    'images/Energetic graphite(高能石墨).png',
    'images/Energy exchanger(能量枢纽).png',
    'images/Energy matrix(能量矩阵).png',
    'images/Fire ice(可燃冰).png',
    'images/Foundation(地基).png',
    'images/Fractal silicon(分形硅).png',
    'images/Fractionator(分馏器).png',
    'images/Frame material(框架).png',
    'images/Gear(齿轮).png',
    'images/Glass(玻璃).png',
    'images/Graphene(石墨烯).png',
    'images/Graviton lens(引力透镜).png',
    'images/Gravity matrix(引力矩阵).png',
    'images/High-purity silicon(高纯硅块).png',
    'images/Hydrogen fuel rod(液氢燃料棒).png',
    'images/Hydrogen(氢).png',
    'images/Information matrix(信息矩阵).png',
    'images/Interstellar Logistics Station(星际物流运输站).png',
    'images/Iron ingot(铁块).png',
    'images/Iron ore(铁矿).png',
    'images/Kimberlite ore(金伯利矿石).png',
    'images/Log(木材).png',
    'images/Logistics drone(物流无人机).png',
    'images/Logistics vessel(运输船).png',
    'images/Magnet(磁铁).png',
    'images/Magnetic coil(磁线圈).png',
    'images/Matrix lab(矩阵实验室).png',
    'images/Microcrystalline component(微晶元件).png',
    'images/Mini fusion power station(微型聚变发电站).png',
    'images/Miniature particle collider(微型粒子对撞机).png',
    'images/Mining machine(采矿机).png',
    'images/Oil extractor(原油萃取站).png',
    'images/Oil refinery(原油精炼厂).png',
    'images/Optical grating crystal(光栅晶体).png',
    'images/Orbit collector(轨道采集器).png',
    'images/Organic crystal(有机晶体).png',
    'images/Particle broadband(粒子宽带).png',
    'images/Particle container(粒子容器).png',
    'images/Photon combiner(光子合成器).png',
    'images/Plane filter(滤波器).png',
    'images/Planetary Logistics Station(行星内物流运输站).png',
    'images/Plant fuel(植物燃料).png',
    'images/Plasma exciter(电浆激发器).png',
    'images/Plastic(塑料).png',
    'images/Power Shard.png',
    'images/Prism(棱镜).png',
    'images/Processor(处理器).png',
    'images/Quantum chip(量子芯片).png',
    'images/r1.png',
    'images/r10.png',
    'images/r100.png',
    'images/r101.png',
    'images/r102.png',
    'images/r103.png',
    'images/r104.png',
    'images/r106.png',
    'images/r107.png',
    'images/r108.png',
    'images/r109.png',
    'images/r11.png',
    'images/r110.png',
    'images/r111.png',
    'images/r112.png',
    'images/r113.png',
    'images/r114.png',
    'images/r115.png',
    'images/r12.png',
    'images/r13.png',
    'images/r14.png',
    'images/r15.png',
    'images/r16.png',
    'images/r17.png',
    'images/r18.png',
    'images/r19.png',
    'images/r2.png',
    'images/r20.png',
    'images/r21.png',
    'images/r22.png',
    'images/r23.png',
    'images/r24.png',
    'images/r25.png',
    'images/r26.png',
    'images/r27.png',
    'images/r28.png',
    'images/r29.png',
    'images/r3.png',
    'images/r30.png',
    'images/r31.png',
    'images/r32.png',
    'images/r33.png',
    'images/r34.png',
    'images/r35.png',
    'images/r36.png',
    'images/r37.png',
    'images/r38.png',
    'images/r39.png',
    'images/r4.png',
    'images/r40.png',
    'images/r41.png',
    'images/r42.png',
    'images/r43.png',
    'images/r44.png',
    'images/r45.png',
    'images/r46.png',
    'images/r47.png',
    'images/r48.png',
    'images/r49.png',
    'images/r5.png',
    'images/r50.png',
    'images/r51.png',
    'images/r52.png',
    'images/r53.png',
    'images/r54.png',
    'images/r55.png',
    'images/r56.png',
    'images/r57.png',
    'images/r58.png',
    'images/r59.png',
    'images/r6.png',
    'images/r60.png',
    'images/r61.png',
    'images/r62.png',
    'images/r63.png',
    'images/r64.png',
    'images/r65.png',
    'images/r66.png',
    'images/r67.png',
    'images/r68.png',
    'images/r69.png',
    'images/r7.png',
    'images/r70.png',
    'images/r71.png',
    'images/r72.png',
    'images/r73.png',
    'images/r74.png',
    'images/r75.png',
    'images/r76.png',
    'images/r77.png',
    'images/r78.png',
    'images/r79.png',
    'images/r8.png',
    'images/r80.png',
    'images/r81.png',
    'images/r82.png',
    'images/r83.png',
    'images/r84.png',
    'images/r85.png',
    'images/r86.png',
    'images/r87.png',
    'images/r88.png',
    'images/r89.png',
    'images/r9.png',
    'images/r90.png',
    'images/r91.png',
    'images/r92.png',
    'images/r93.png',
    'images/r94.png',
    'images/r95.png',
    'images/r96.png',
    'images/r97.png',
    'images/r98.png',
    'images/r99.png',
    'images/Ray receiver(射线接收站).png',
    'images/Refined oil(精炼油).png',
    'images/Reinforced thruster(加力推进器).png',
    'images/Satellite substation(卫星变电站).png',
    'images/Silicon ore(硅石).png',
    'images/Small carrier rocket(小型运载火箭).png',
    'images/Smelter(电弧熔炉).png',
    'images/Solar panel(太阳能板).png',
    'images/Solar sail(太阳帆).png',
    'images/Sorter MK.I(分拣器).png',
    'images/Sorter MK.II(高速分拣器).png',
    'images/Sorter MK.III(极速分拣器).png',
    'images/Space warper(空间折跃).png',
    'images/Spiniform stalagmite crystal(刺状石笋晶体).png',
    'images/Splitter(4-direction)(四向分流器).png',
    'images/Spray coater(喷涂机).png',
    'images/Steel(钢材).png',
    'images/Stone ore(石矿).png',
    'images/Stone(石材).png',
    'images/Storage MK.I(小型储物仓).png',
    'images/Storage MK.II(大型储物仓).png',
    'images/Storage tank(储液罐).png',
    'images/Strange matter(奇异物质).png',
    'images/Structure matrix(结构矩阵).png',
    'images/Sulfuric acid(硫酸).png',
    'images/Super-magnetic ring(超磁环).png',
    'images/Tesla tower(电力感应塔).png',
    'images/Thermal power station(火力发电厂).png',
    'images/Thruster(推进器).png',
    'images/Titanium alloy(钛合金).png',
    'images/Titanium crystal(钛水晶).png',
    'images/Titanium glass(钛玻璃).png',
    'images/Titanium ingot(钛块).png',
    'images/Titanium ore(钛矿).png',
    'images/Unipolar magnet(单极磁铁).png',
    'images/Universe matrix(宇宙矩阵).png',
    'images/Vertical launching silo(垂直发射井).png',
    'images/Water pump(抽水站).png',
    'images/Water(水).png',
    'images/Wind turbine(风力涡轮机).png',
    'images/Wireless power tower(无线输电塔).png'
];

self.addEventListener('install', event => {
    event.waitUntil(
        caches.open(PRECACHE)
            .then(cache => cache.addAll(PRECACHE_URLS))
            .then(self.skipWaiting())
    );
});

self.addEventListener('activate', event => {
    const currentCaches = [PRECACHE, RUNTIME];
    event.waitUntil(
        caches.keys().then(cacheNames => {
            return cacheNames.filter(cacheName => !currentCaches.includes(cacheName));
        }).then(cachesToDelete => {
            return Promise.all(cachesToDelete.map(cacheToDelete => {
                return caches.delete(cacheToDelete);
            }));
        }).then(() => self.clients.claim())
    );
});

self.addEventListener('fetch', event => {
    if (event.request.url.startsWith(self.location.origin)) {
        event.respondWith(
            caches.match(event.request).then(cachedResponse => {
                if (cachedResponse) {
                    return cachedResponse;
                }
                return caches.open(RUNTIME).then(cache => {
                    return fetch(event.request).then(response => {
                        return cache.put(event.request, response.clone()).then(() => {
                            return response;
                        });
                    })
                });
            })
        );
    }
});